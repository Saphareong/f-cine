import React from "react";
import { Box, Stack, styled, SvgIcon } from "@mui/material";

const SvgStyle = styled(SvgIcon, {
  shouldForwardProp: (prop) =>
    prop !== "isSelected" && prop !== "isDisabled" && prop !== "isSold",
})(({ theme, isSelected, isDisabled, isSold }) => ({
  fontSize: "32px",
  fill: theme.palette.neutral[0],
  stroke: theme.palette.neutral[500],
  ...(isSelected && {
    fill: theme.palette.primary.light,
    stroke: theme.palette.primary.main,
  }),
  ...(isDisabled && {
    fill: theme.palette.info.light,
    stroke: theme.palette.info.main,
  }),
  ...(isSold && {
    fill: theme.palette.error.light,
    stroke: theme.palette.error.main,
  }),
}));

const BoxStyle = styled(Box, {
  shouldForwardProp: (prop) =>
    prop !== "isSelected" && prop !== "isDisabled" && prop !== "isSold",
})(({ theme, isSelected, isDisabled, isSold }) => ({
  height: 32,
  width: 32,
  backgroundColor: theme.palette.neutral[500],
  borderRadius: "2px",
  ...(isSelected && {
    backgroundColor: theme.palette.primary.main,
  }),
  ...(isDisabled && {
    fill: theme.palette.info.light,
    stroke: theme.palette.info.main,
  }),
  ...(isSold && {
    fill: theme.palette.error.light,
  }),
}));

const SeatList = ({
  seatList,
  selectedSeats,
  disabledSeats,
  soldSeats,
  onSelectedSeatsChange,
  isView,
  ...props
}) => {
  function handleSelectedState(seat) {
    const isSelected = selectedSeats.includes(seat);
    if (isSelected) {
      onSelectedSeatsChange(
        selectedSeats.filter((selectedSeat) => selectedSeat !== seat)
      );
    } else {
      onSelectedSeatsChange([...selectedSeats, seat]);
    }
  }

  return (
    <Box sx={{ perspective: "300px" }}>
      <Stack
        direction="row"
        alignItems="center"
        justifyContent="center"
        gap="12px"
      >
        <Stack
          direction="column"
          sx={{ marginTop: "54px" }}
          justifyContent="space-between"
        >
          {[...Array(props.numberOfRow)]
            .map((x, i) => (
              <Box
                key={i}
                sx={{
                  height: "30px",
                  width: "30px",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  fontWeight: "500",
                  fontSize: "18px",
                  marginBottom: "12px",
                }}
              >
                {String.fromCharCode(i + 65)}
              </Box>
            ))
            .reverse()}
        </Stack>

        <Box
          sx={{
            display: "grid",
            gridGap: "10px",
            gridTemplateColumns: `repeat(${props.numberOfColumn}, min-content)`,
            alignItems: "center",
            justifyContent: "center",
          }}
        >
          {[...Array(props.numberOfColumn)].map((x, i) => (
            <Box
              key={i}
              sx={{
                height: "32px",
                width: "32px",
                textAlign: "center",
                fontWeight: "500",
                fontSize: "18px",
              }}
            >
              {++i}
            </Box>
          ))}
          {[...Array(props.numberOfRow)]
            .map((row, iR) => (
              <>
                {[...Array(props.numberOfColumn)].map((column, iC) => {
                  let seat = seatList?.find(
                    (seat) =>
                      seat.rowPos === iR + 1 && seat.columnPos === iC + 1
                  );
                  if (seat) {
                    return (
                      <SvgStyle
                        key={seat.id}
                        onClick={() => {
                          if (!disabledSeats?.includes(seat) && !isView) {
                            handleSelectedState(seat);
                          }
                        }}
                        sx={{
                          cursor:
                            !isView && !disabledSeats?.includes(seat)
                              ? "pointer"
                              : "default",
                        }}
                        isSelected={selectedSeats?.includes(seat)}
                        isDisabled={disabledSeats?.includes(seat)}
                        isSold={soldSeats?.includes(seat)}
                      >
                        {seat.seatType?.name === "Vip" && (
                          <>
                            <path
                              d="M20.9294 11.3794L20.9294 19.6179L0.525391 19.6179L0.525391 11.3794C0.525585 10.3174 1.35451 9.43446 2.42845 9.35242C2.48102 9.34859 2.53417 9.34668 2.58791 9.34668C3.72664 9.34649 4.64985 10.2566 4.64985 11.3794L4.64985 15.9805L16.8052 15.9805V11.3794C16.8052 10.2566 17.7282 9.34668 18.8671 9.34668C18.9439 9.34668 19.0209 9.3507 19.0974 9.35892C20.1407 9.47462 20.9294 10.3444 20.9294 11.3794V11.3794Z"
                              fill="inherit"
                            />
                            <path
                              d="M20.135 19.6191V19.6413L19.6383 23.7071H17.3033L16.8066 19.6413V19.6191H20.135Z"
                              fill="inherit"
                            />
                            <path
                              d="M19.1023 4.00421L19.1023 9.32109L19.0976 9.35934C19.0212 9.35112 18.9442 9.3471 18.8674 9.3471C17.7284 9.3471 16.8054 10.257 16.8054 11.3798L16.8054 15.9809L4.65009 15.9809L4.65009 11.3798C4.65009 10.257 3.72688 9.34691 2.58815 9.3471C2.53442 9.3471 2.48126 9.34902 2.42869 9.35284L2.42578 9.32109L2.42578 4.00421C2.42578 2.92274 3.31504 2.0459 4.41226 2.0459L6.75471 2.0459L6.75471 3.88373C6.75471 4.15414 6.97702 4.3733 7.25132 4.3733L14.204 4.3733C14.4783 4.3733 14.7006 4.15414 14.7006 3.88373V2.0459L17.1158 2.0459C18.2128 2.0459 19.1023 2.92274 19.1023 4.00421ZM11.845 9.15223L12.9624 8.0786L11.4185 7.85714L10.7277 6.47753L10.0369 7.85714L8.49287 8.0786L9.61026 9.15223L9.34663 10.6684L10.7277 9.95257L12.1089 10.6684L11.845 9.15223Z"
                              fill="inherit"
                            />
                            <path
                              d="M14.7037 2.04707V3.8849C14.7037 4.15532 14.4814 4.37448 14.2071 4.37448L7.25443 4.37448C6.98013 4.37448 6.75781 4.15532 6.75781 3.8849L6.75781 0.784499C6.75781 0.514084 6.98013 0.294922 7.25443 0.294922L14.2071 0.294922C14.4814 0.294922 14.7037 0.514084 14.7037 0.784499V2.04707Z"
                              fill="inherit"
                            />
                            <path
                              d="M12.9618 8.07763L11.8444 9.15126L12.1082 10.6674L10.727 9.95161L9.34595 10.6674L9.60958 9.15126L8.49219 8.07763L10.0362 7.85618L10.727 6.47656L11.4178 7.85618L12.9618 8.07763Z"
                              fill="inherit"
                            />
                            <path
                              d="M4.57832 19.6191V19.6413L4.0817 23.7071H1.74662L1.25 19.6413V19.6191H4.57832Z"
                              fill="inherit"
                            />
                            <path
                              d="M14.2048 0L7.25218 0C6.81356 0.000573726 6.45817 0.350928 6.45759 0.783324V1.75215L4.41311 1.75215C3.15197 1.75368 2.13002 2.76114 2.12866 4.00421L2.12866 9.0983C1.02679 9.31861 0.233365 10.2714 0.228516 11.3798L0.228516 19.6183C0.228516 19.7806 0.361982 19.912 0.526487 19.912H0.983337L1.45105 23.7414C1.46909 23.8891 1.59616 24 1.74689 24H4.08197C4.23289 24 4.35996 23.8891 4.3778 23.7414L4.84552 19.912L16.5395 19.912L17.0072 23.7414C17.0253 23.8891 17.1522 24 17.3031 24H19.638C19.7887 24 19.9158 23.8891 19.9338 23.7414L20.4015 19.912H20.9305C21.0952 19.912 21.2285 19.7806 21.2285 19.6183V11.3798C21.2303 10.7623 20.9814 10.1698 20.5373 9.73456C20.2244 9.42723 19.831 9.21209 19.4011 9.11321L19.4011 4.00421C19.3996 2.76114 18.3776 1.75368 17.1167 1.75215L14.9994 1.75215V0.783324C14.999 0.350928 14.6435 0.000573726 14.2048 0ZM7.05353 0.783324C7.05353 0.675081 7.14257 0.587493 7.25218 0.587493L14.2048 0.587493C14.3146 0.587493 14.4035 0.675081 14.4035 0.783324L14.4035 3.88373C14.4035 3.99197 14.3146 4.07956 14.2048 4.07956L7.25218 4.07956C7.14257 4.07956 7.05353 3.99197 7.05353 3.88373L7.05353 0.783324ZM3.81756 23.4125H2.01091L1.58335 19.912H4.24531L3.81756 23.4125ZM19.3736 23.4125H17.5669L17.1395 19.912H19.8013L19.3736 23.4125ZM19.0663 9.65137C19.4632 9.69593 19.8331 9.87187 20.116 10.1501C20.4479 10.4754 20.6339 10.9183 20.6326 11.3798V19.3245L0.824458 19.3245L0.824458 11.3798C0.827756 10.4727 1.53505 9.71926 2.45205 9.64582C2.49686 9.64238 2.54303 9.64085 2.58901 9.64085C3.56323 9.64085 4.35297 10.4194 4.35297 11.3798L4.35297 15.9809C4.35297 16.1432 4.48644 16.2746 4.65094 16.2746L16.8063 16.2746C16.9708 16.2746 17.1042 16.1432 17.1042 15.9809V11.3798C17.1052 10.4198 17.8944 9.64181 18.8682 9.64085C18.9344 9.64085 19.0005 9.64429 19.0663 9.65137V9.65137ZM17.1167 2.33964C18.0486 2.34079 18.804 3.08529 18.8052 4.00421L18.8052 9.05489C17.5275 9.08969 16.5099 10.1199 16.5083 11.3798V15.6871L4.94892 15.6871L4.94892 11.3798C4.94911 10.1467 3.97314 9.12794 2.72461 9.05737L2.72461 4.00421C2.72558 3.08529 3.48098 2.34079 4.41311 2.33964L6.45759 2.33964V3.88373C6.45817 4.31631 6.81356 4.66667 7.25218 4.66705L14.2048 4.66705C14.6435 4.66667 14.999 4.31631 14.9994 3.88373L14.9994 2.33964L17.1167 2.33964Z"
                              fill="inherit"
                            />
                          </>
                        )}
                        {seat.seatType?.name === "Normal" && (
                          <>
                            <path
                              d="M20.9311 11.3799V19.6183H0.5271V11.3799C0.527294 10.3179 1.35622 9.43495 2.43016 9.35291C2.48273 9.34908 2.53588 9.34717 2.58962 9.34717C3.72835 9.34698 4.65156 10.2571 4.65156 11.3799V15.9809H16.8069V11.3799C16.8069 10.2571 17.7299 9.34717 18.8688 9.34717C18.9456 9.34717 19.0227 9.35118 19.0991 9.35941C20.1424 9.47511 20.9311 10.3449 20.9311 11.3799V11.3799Z"
                              fill="inherit"
                            />
                            <path
                              d="M20.1352 19.6184V19.6406L19.6386 23.7064H17.3035L16.8069 19.6406V19.6184H20.1352Z"
                              fill="inherit"
                            />
                            <path
                              d="M19.082 4.00421V9.32109L19.0774 9.35934C19.0009 9.35112 18.9239 9.3471 18.8471 9.3471C17.7082 9.3471 16.7852 10.257 16.7852 11.3798V15.9809H4.62983V11.3798C4.62983 10.257 3.70662 9.34691 2.56789 9.3471C2.51415 9.3471 2.461 9.34902 2.40843 9.35284L2.40552 9.32109V4.00421C2.40552 2.92274 3.29478 2.0459 4.39199 2.0459H6.73444V3.88373C6.73444 4.15414 6.95676 4.3733 7.23106 4.3733H14.1837C14.458 4.3733 14.6803 4.15414 14.6803 3.88373V2.0459H17.0955C18.1926 2.0459 19.082 2.92274 19.082 4.00421Z"
                              fill="inherit"
                            />
                            <path
                              d="M14.7021 2.04585V3.88368C14.7021 4.1541 14.4798 4.37326 14.2055 4.37326H7.25284C6.97854 4.37326 6.75623 4.1541 6.75623 3.88368V0.783279C6.75623 0.512864 6.97854 0.293701 7.25284 0.293701H14.2055C14.4798 0.293701 14.7021 0.512864 14.7021 0.783279V2.04585Z"
                              fill="inherit"
                            />
                            <path
                              d="M4.57905 19.6184V19.6406L4.08243 23.7064H1.74735L1.25073 19.6406V19.6184H4.57905Z"
                              fill="inherit"
                            />
                            <path
                              d="M14.2055 0H7.25279C6.81417 0.000573726 6.45878 0.350928 6.4582 0.783324V1.75215H4.41372C3.15258 1.75368 2.13063 2.76114 2.12927 4.00421V9.0983C1.0274 9.31861 0.233976 10.2714 0.229126 11.3798V19.6183C0.229126 19.7806 0.362592 19.912 0.527097 19.912H0.983948L1.45166 23.7414C1.4697 23.8891 1.59677 24 1.7475 24H4.08258C4.2335 24 4.36057 23.8891 4.37841 23.7414L4.84613 19.912H16.5401L17.0079 23.7414C17.0259 23.8891 17.1528 24 17.3037 24H19.6386C19.7893 24 19.9164 23.8891 19.9344 23.7414L20.4021 19.912H20.9311C21.0958 19.912 21.2291 19.7806 21.2291 19.6183V11.3798C21.2309 10.7623 20.982 10.1698 20.5379 9.73456C20.225 9.42723 19.8316 9.21209 19.4017 9.11321V4.00421C19.4002 2.76114 18.3782 1.75368 17.1173 1.75215H15V0.783324C14.9997 0.350928 14.6441 0.000573726 14.2055 0ZM7.05414 0.783324C7.05414 0.675081 7.14318 0.587493 7.25279 0.587493H14.2055C14.3153 0.587493 14.4041 0.675081 14.4041 0.783324V3.88373C14.4041 3.99197 14.3153 4.07956 14.2055 4.07956H7.25279C7.14318 4.07956 7.05414 3.99197 7.05414 3.88373V0.783324ZM3.81817 23.4125H2.01152L1.58396 19.912H4.24592L3.81817 23.4125ZM19.3742 23.4125H17.5675L17.1402 19.912H19.8019L19.3742 23.4125ZM19.0669 9.65137C19.4638 9.69593 19.8337 9.87187 20.1166 10.1501C20.4485 10.4754 20.6345 10.9183 20.6332 11.3798V19.3245H0.825069V11.3798C0.828366 10.4727 1.53566 9.71926 2.45266 9.64582C2.49747 9.64238 2.54364 9.64085 2.58962 9.64085C3.56384 9.64085 4.35358 10.4194 4.35358 11.3798V15.9809C4.35358 16.1432 4.48705 16.2746 4.65156 16.2746H16.8069C16.9714 16.2746 17.1049 16.1432 17.1049 15.9809V11.3798C17.1058 10.4198 17.895 9.64181 18.8688 9.64085C18.935 9.64085 19.0011 9.64429 19.0669 9.65137V9.65137ZM17.1173 2.33964C18.0492 2.34079 18.8046 3.08529 18.8058 4.00421V9.05489C17.5281 9.08969 16.5105 10.1199 16.5089 11.3798V15.6871H4.94953V11.3798C4.94972 10.1467 3.97375 9.12794 2.72522 9.05737V4.00421C2.72619 3.08529 3.48159 2.34079 4.41372 2.33964H6.4582V3.88373C6.45878 4.31631 6.81417 4.66667 7.25279 4.66705H14.2055C14.6441 4.66667 14.9997 4.31631 15 3.88373V2.33964H17.1173Z"
                              fill="inherit"
                            />
                          </>
                        )}
                        <defs>
                          <clipPath id="clip0_0_2810">
                            <rect
                              width="18.4202"
                              height="21.4752"
                              fill="white"
                              transform="translate(0.71582 0.197205)"
                            />
                          </clipPath>
                        </defs>
                      </SvgStyle>
                    );
                  } else {
                    return (
                      <BoxStyle
                        key={iC}
                        sx={{
                          cursor: !isView ? "pointer" : "default",
                        }}
                        onClick={() => {
                          if (!isView) {
                            let pos = {
                              name: `${String.fromCharCode(iR + 65)}${iC + 1}`,
                              columnPos: iC + 1,
                              rowPos: iR + 1,
                            };
                            handleSelectedState(pos);
                          }
                        }}
                        isSelected={selectedSeats?.find(
                          (s) =>
                            s.name ===
                            `${String.fromCharCode(iR + 65)}${iC + 1}`
                        )}
                      />
                    );
                  }
                })}
              </>
            ))
            .reverse()}
        </Box>
      </Stack>
      <Box
        sx={{
          margin: "20px",
          height: "90px",
          backgroundColor: "neutral.400",
          width: "100%",
          transform: "rotateX(258deg) scale(1.1)",
          boxShadow: "0 3px 10px 2px #e7e7e8",
        }}
      />
    </Box>
  );
};

export default SeatList;
